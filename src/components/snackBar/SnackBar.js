import React from "react";
import PropTypes from "prop-types";
import styles from "./assets/SnackBar.module.scss";

export const SnackBar = (props) => {
  const { title, description, type, onClose, position, duration } = props;
  let icon;
  let classes;
  let uId = Date.now();

  switch (type) {
    case "info":
      icon = (
        <path
          d="M16 0C12.8355 0 9.74207 0.938384 7.11088 2.69649C4.4797 4.45459 2.42894 6.95345 1.21793 9.87706C0.00693258 12.8007 -0.309921 16.0177 0.307443 19.1214C0.924806 22.2251 2.44866 25.0761 4.6863 27.3137C6.92394 29.5513 9.77487 31.0752 12.8786 31.6926C15.9823 32.3099 19.1993 31.9931 22.1229 30.7821C25.0466 29.5711 27.5454 27.5203 29.3035 24.8891C31.0616 22.2579 32 19.1645 32 16C31.9954 11.7579 30.3082 7.69095 27.3087 4.69136C24.3091 1.69177 20.2421 0.00458811 16 0V0ZM16.3333 6.66667C16.7289 6.66667 17.1156 6.78396 17.4445 7.00373C17.7734 7.22349 18.0297 7.53585 18.1811 7.9013C18.3325 8.26675 18.3721 8.66888 18.2949 9.05685C18.2177 9.44481 18.0273 9.80118 17.7476 10.0809C17.4678 10.3606 17.1115 10.5511 16.7235 10.6282C16.3356 10.7054 15.9334 10.6658 15.568 10.5144C15.2025 10.3631 14.8902 10.1067 14.6704 9.77781C14.4506 9.44891 14.3333 9.06223 14.3333 8.66667C14.3333 8.13623 14.5441 7.62753 14.9191 7.25245C15.2942 6.87738 15.8029 6.66667 16.3333 6.66667ZM19.3333 24.6667H14C13.6464 24.6667 13.3072 24.5262 13.0572 24.2761C12.8072 24.0261 12.6667 23.687 12.6667 23.3333C12.6667 22.9797 12.8072 22.6406 13.0572 22.3905C13.3072 22.1405 13.6464 22 14 22H15C15.0884 22 15.1732 21.9649 15.2357 21.9024C15.2982 21.8399 15.3333 21.7551 15.3333 21.6667V15.6667C15.3333 15.5783 15.2982 15.4935 15.2357 15.431C15.1732 15.3685 15.0884 15.3333 15 15.3333H14C13.6464 15.3333 13.3072 15.1929 13.0572 14.9428C12.8072 14.6928 12.6667 14.3536 12.6667 14C12.6667 13.6464 12.8072 13.3072 13.0572 13.0572C13.3072 12.8071 13.6464 12.6667 14 12.6667H15.3333C16.0406 12.6667 16.7189 12.9476 17.219 13.4477C17.7191 13.9478 18 14.6261 18 15.3333V21.6667C18 21.7551 18.0351 21.8399 18.0976 21.9024C18.1602 21.9649 18.2449 22 18.3333 22H19.3333C19.687 22 20.0261 22.1405 20.2761 22.3905C20.5262 22.6406 20.6667 22.9797 20.6667 23.3333C20.6667 23.687 20.5262 24.0261 20.2761 24.2761C20.0261 24.5262 19.687 24.6667 19.3333 24.6667Z"
          fill="#627386"
        />
      );
      classes = styles.info;
      break;
    case "success":
      icon = (
        <path
          d="M16.1846 0.34375C13.0201 0.34375 9.92664 1.28213 7.29545 3.04024C4.66427 4.79834 2.61351 7.2972 1.40251 10.2208C0.191503 13.1444 -0.125351 16.3615 0.492013 19.4652C1.10938 22.5689 2.63323 25.4198 4.87087 27.6575C7.10851 29.8951 9.95944 31.4189 13.0631 32.0363C16.1668 32.6537 19.3839 32.3368 22.3075 31.1258C25.2311 29.9148 27.73 27.8641 29.4881 25.2329C31.2462 22.6017 32.1846 19.5083 32.1846 16.3437C32.1796 12.1018 30.4923 8.03501 27.4928 5.0355C24.4933 2.03599 20.4265 0.34869 16.1846 0.34375V0.34375ZM25.4206 11.2771L16.2939 23.6624C16.1862 23.8054 16.051 23.9254 15.8964 24.0156C15.7417 24.1058 15.5706 24.1642 15.3931 24.1876C15.2156 24.2109 15.0353 24.1986 14.8626 24.1515C14.6899 24.1044 14.5283 24.0233 14.3872 23.9131L7.86991 18.7024C7.73316 18.593 7.61931 18.4577 7.53484 18.3042C7.45038 18.1508 7.39697 17.9822 7.37765 17.8082C7.33865 17.4566 7.4409 17.1039 7.66191 16.8277C7.88292 16.5516 8.2046 16.3745 8.55617 16.3355C8.90773 16.2965 9.2604 16.3987 9.53658 16.6197L14.9712 20.9677L23.2739 9.69975C23.3739 9.54976 23.5032 9.42159 23.6541 9.32299C23.805 9.2244 23.9743 9.15741 24.1518 9.12609C24.3293 9.09478 24.5113 9.09977 24.6868 9.14078C24.8623 9.18179 25.0277 9.25796 25.1729 9.36468C25.3182 9.47141 25.4403 9.60648 25.5319 9.76172C25.6234 9.91697 25.6826 10.0892 25.7057 10.2679C25.7289 10.4467 25.7156 10.6283 25.6665 10.8017C25.6175 10.9752 25.5339 11.1369 25.4206 11.2771Z"
          fill="#48A463"
        />
      );
      classes = styles.success;
      break;
    case "error":
      icon = (
        <path
          d="M30.8253 25.6669L18.3627 1.86689C18.1368 1.43588 17.7973 1.07488 17.381 0.823008C16.9646 0.571136 16.4873 0.437988 16.0007 0.437988C15.5141 0.437988 15.0367 0.571136 14.6204 0.823008C14.204 1.07488 13.8645 1.43588 13.6387 1.86689L1.17468 25.6669C0.961773 26.0734 0.857351 26.5279 0.871509 26.9865C0.885668 27.4451 1.01793 27.8924 1.2555 28.2849C1.49307 28.6775 1.82792 29.0021 2.22766 29.2274C2.62739 29.4526 3.0785 29.571 3.53735 29.5709H28.4627C28.9215 29.571 29.3726 29.4526 29.7724 29.2274C30.1721 29.0021 30.507 28.6775 30.7445 28.2849C30.9821 27.8924 31.1144 27.4451 31.1285 26.9865C31.1427 26.5279 31.0383 26.0734 30.8253 25.6669ZM14.6667 10.2309C14.6667 9.87727 14.8072 9.53813 15.0572 9.28808C15.3073 9.03803 15.6464 8.89755 16 8.89755C16.3536 8.89755 16.6928 9.03803 16.9428 9.28808C17.1929 9.53813 17.3333 9.87727 17.3333 10.2309V18.2309C17.3333 18.5845 17.1929 18.9236 16.9428 19.1737C16.6928 19.4237 16.3536 19.5642 16 19.5642C15.6464 19.5642 15.3073 19.4237 15.0572 19.1737C14.8072 18.9236 14.6667 18.5845 14.6667 18.2309V10.2309ZM16.0667 25.5776H16.0293C15.5035 25.5759 14.9987 25.371 14.6205 25.0057C14.2423 24.6404 14.02 24.143 14 23.6176C13.9904 23.3562 14.033 23.0956 14.1252 22.8509C14.2175 22.6062 14.3576 22.3824 14.5373 22.1925C14.7171 22.0025 14.9329 21.8503 15.1721 21.7448C15.4113 21.6392 15.6692 21.5823 15.9307 21.5776H15.968C16.4937 21.5782 16.9988 21.7821 17.3776 22.1467C17.7563 22.5113 17.9794 23.0082 18 23.5336C18.0104 23.7955 17.9682 24.0568 17.8761 24.3022C17.784 24.5476 17.6438 24.7721 17.4637 24.9626C17.2835 25.153 17.0672 25.3055 16.8273 25.4111C16.5874 25.5167 16.3288 25.5733 16.0667 25.5776Z"
          fill="#FF5B42"
        />
      );
      classes = styles.error;
      break;
    default:
      icon = "";
      classes = "";
      break;
  }
  if (duration) {
    setTimeout(() => {
      onClose();
    }, duration);
  }
  const computePosition = () => {
    let Position;

    switch (position) {
      case "bottom-center":
        Position = styles.bottomCenter;
        break;
      case "bottom-left":
        Position = styles.bottomLeft;
        break;
      case "bottom-right":
        Position = styles.bottomRight;
        break;
      case "top-center":
        Position = styles.topCenter;
        break;
      case "top-left":
        Position = styles.topLeft;
        break;
      case "top-right":
        Position = styles.topRight;
        break;
      default:
        Position = position;
        break;
    }
    return Position;
  };

  return (
    <div className={computePosition()} data-testid="snackbar-container">
      <div className={classes} id={`SnackBar-${uId}`}>
        <svg
          width="33"
          height="33"
          viewBox="0 0 33 33"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          {icon}
        </svg>
        <div className={styles.flexContainer}>
          {title && (
            <h2 className={styles.title} data-testid="SnackBar-title">
              {title}
            </h2>
          )}
          <div>{description}</div>
        </div>
        <button
          className={styles.buttonWrap}
          data-testid="close-button"
          aria-describedby={`SnackBar-${uId}`}
          aria-label="close"
          onClick={() => {
            onClose();
          }}
        >
          <svg
            width="20"
            height="20"
            viewBox="0 0 20 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M11.9167 10.1492C11.8972 10.1299 11.8819 10.1069 11.8714 10.0816C11.8609 10.0563 11.8554 10.0291 11.8554 10.0017C11.8554 9.97434 11.8609 9.94721 11.8714 9.9219C11.8819 9.89659 11.8972 9.8736 11.9167 9.85424L19.6358 2.13591C19.8702 1.90119 20.0017 1.58298 20.0015 1.25128C20.0013 0.919571 19.8693 0.601545 19.6346 0.36716C19.3999 0.132775 19.0816 0.00123074 18.7499 0.00146516C18.4182 0.00169957 18.1002 0.133694 17.8658 0.36841L10.1475 8.08341C10.1281 8.10281 10.1051 8.11821 10.0798 8.12871C10.0545 8.13921 10.0274 8.14462 9.99998 8.14462C9.97258 8.14462 9.94545 8.13921 9.92014 8.12871C9.89483 8.11821 9.87184 8.10281 9.85248 8.08341L2.13415 0.36841C2.0181 0.2523 1.88031 0.160185 1.72865 0.0973258C1.577 0.0344663 1.41444 0.00209308 1.25028 0.00205439C0.91873 0.00197625 0.600729 0.133609 0.366234 0.367994C0.131738 0.602379 -4.38954e-05 0.920317 -0.000122036 1.25187C-0.000200176 1.58341 0.131432 1.90141 0.365817 2.13591L8.08332 9.85424C8.10272 9.8736 8.11811 9.89659 8.12861 9.9219C8.13912 9.94721 8.14452 9.97434 8.14452 10.0017C8.14452 10.0291 8.13912 10.0563 8.12861 10.0816C8.11811 10.1069 8.10272 10.1299 8.08332 10.1492L0.365817 17.8684C0.249761 17.9845 0.157712 18.1224 0.0949239 18.274C0.0321359 18.4257 -0.000160727 18.5883 -0.000122036 18.7525C-4.38954e-05 19.084 0.131738 19.4019 0.366234 19.6363C0.482344 19.7524 0.620177 19.8444 0.771861 19.9072C0.923546 19.97 1.08611 20.0023 1.25028 20.0023C1.58183 20.0022 1.89977 19.8704 2.13415 19.6359L9.85248 11.9167C9.87184 11.8973 9.89483 11.8819 9.92014 11.8714C9.94545 11.8609 9.97258 11.8555 9.99998 11.8555C10.0274 11.8555 10.0545 11.8609 10.0798 11.8714C10.1051 11.8819 10.1281 11.8973 10.1475 11.9167L17.8658 19.6359C18.1002 19.8704 18.4181 20.0022 18.7497 20.0023C19.0812 20.0023 19.3992 19.8707 19.6337 19.6363C19.8682 19.4019 20 19.084 20.0001 18.7525C20.0002 18.4209 19.8685 18.1029 19.6342 17.8684L11.9167 10.1492Z"
              fill="#627386"
            />
          </svg>
        </button>
      </div>
    </div>
  );
};

SnackBar.propTypes = {
  title: PropTypes.string,
  description: PropTypes.any,
  type: PropTypes.oneOf(["success", "info", "error"]),
  onClose: PropTypes.func,
  position: PropTypes.any,
  duration: PropTypes.string,
};
SnackBar.defaultProps = {
  type: "info",
};
