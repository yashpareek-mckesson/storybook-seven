@import "../abstracts/mixins";

//usage
//<div class="grid grid-gap-16 grid-cols-1 md:grid-cols-3 lg:grid-cols-6 xl:grid-cols-12">
//<div class="box">01</div>
//<div class="box">02</div>
//<div class="box">03</div>
//<div class="box">04</div>
//<div class="box">05</div>
//<div class="box">06</div>
//<div class="box">07</div>
//<div class="box">08</div>
//<div class="box">09</div>
//<div class="box">10</div>
//<div class="box">11</div>
//<div class="box">12</div>
//</div>

.grid {
  display: grid;
}

.grid-cols-none {
  grid-template-columns: none;
}

$sizes: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;

@each $size in $sizes {
  .grid-cols-#{$size} {
    grid-template-columns: repeat($size, minmax(0, 1fr));
  }
}

@each $size in $sizes {
  @include respond(md) {
    .md\:grid-cols-#{$size} {
      grid-template-columns: repeat($size, minmax(0, 1fr));
    }
  }
}

@each $size in $sizes {
  @include respond(lg) {
    .lg\:grid-cols-#{$size} {
      grid-template-columns: repeat($size, minmax(0, 1fr));
    }
  }
}

@each $size in $sizes {
  @include respond(xl) {
    .xl\:grid-cols-#{$size} {
      grid-template-columns: repeat($size, minmax(0, 1fr));
    }
  }
}

@each $size in $sizes {
  @include respond(xxl) {
    .xl\:grid-cols-#{$size} {
      grid-template-columns: repeat($size, minmax(0, 1fr));
    }
  }
}

@each $size in $sizes {
  .grid-rows-#{$size} {
    grid-template-rows: repeat($size, minmax(0, 1fr));
  }
}

$gapsize: (6, 7, 8, 9, 10, 12, 16, 20, 24, 32);

@each $gap in $gapsize {
  .grid-gap-#{$gap} {
    grid-gap: #{$gap}px;
  }
}
