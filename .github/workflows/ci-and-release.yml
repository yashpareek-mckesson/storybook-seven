name: CI/Release Workflow

on:
  push:
    branches:
      - main

env:
  DOCKER_REGISTRY: "mck-ontada-sre.jfrog.io"
  IMAGE_NAME: "mck-ontada-sre.jfrog.io/mcp-frontend-component"
  PRISMA_USER: ${{ secrets.PRISMA_USER }}
  PRISMA_PASSWORD: ${{ secrets.PRISMA_PASSWORD }}

jobs:
  build_and_push:
    name: Build, Test, and Push Docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      #       - name: Use Node.js ${{ matrix.node-version }}
      #         uses: actions/setup-node@v1
      #         with:
      #           node-version: ${{ matrix.node-version }}
      #       - run: |
      #          npm config set @mckesson-ontada:registry https://npm.pkg.github.com
      #          npm set "//npm.pkg.github.com/:_authToken" ${{ secrets.AUTH_TOKEN }}
      #          npm install
      #          npm run build
      #          yarn add typescript
      #          yarn && CI=true yarn test --passWithNoTests
      #          yarn build

      - name: Generate short SHA
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7

      - name: Setup Docker build
        uses: docker/setup-buildx-action@v1

      - name: Login to JFrog
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DEV_PORTAL_JFROG_USERNAME }}
          password: ${{ secrets.DEV_PORTAL_JFROG_API_KEY }}
          registry: ${{ env.DOCKER_REGISTRY }}

      - name: Docker Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.short-sha.outputs.sha }}
            ${{ env.IMAGE_NAME }}:latest
          build-args: NPM_TOKEN=${{ secrets.NPM_TOKEN }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline
          load: true

      - id: scan-docker-image
        name: Scan docker image
        run: |
          curl -u $PRISMA_USER:$PRISMA_PASSWORD --output twistcli https://us-east1.cloud.twistlock.com/us-2-158257908/api/v1/util/twistcli && chmod +x twistcli && mv twistcli /tmp/
          /tmp/twistcli images scan --details --address https://us-east1.cloud.twistlock.com/us-2-158257908 --user $PRISMA_USER --password $PRISMA_PASSWORD $IMAGE_NAME

      - if: github.ref == 'refs/heads/main'
        id: version-bump-git-tag
        name: Bump version and push git tag
        uses: anothrNick/github-tag-action@9885a4f9af674ba472de91fb3c0cb033ecb32b7e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: github.ref == 'refs/heads/main'
        name: Docker Push
        id: push-docker-image
        run: |
          docker tag $IMAGE_NAME:${{ steps.short-sha.outputs.sha }} $IMAGE_NAME:${{ steps.version-bump-git-tag.outputs.new_tag }}
          docker push -a $IMAGE_NAME

      - if: github.ref == 'refs/heads/main'
        name: Create Prerelease
        uses: ncipollo/release-action@v1
        with:
          prerelease: true
          tag: ${{ steps.version-bump-git-tag.outputs.new_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
