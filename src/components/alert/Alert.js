import React from "react";
import PropTypes from "prop-types";
import styles from "./assets/styles/Alert.module.scss";
import { ALERT_SIZE, ALERT_TYPE } from "./assets/constants/AlertConstants";

export const Alert = (props) => {
  const { title, showTitle, description, type, size, onClose } = props;
  let icon;
  let iconSize;
  let closeSize;
  let uId = Date.now();

  const getType = () => {
    let classes;
    switch (type) {
      case ALERT_TYPE.INFO:
        icon = (
          <path
            d="M8 0C6.41775 0 4.87104 0.469192 3.55544 1.34824C2.23985 2.22729 1.21447 3.47672 0.608967 4.93853C0.00346629 6.40034 -0.15496 8.00887 0.153721 9.56072C0.462403 11.1126 1.22433 12.538 2.34315 13.6569C3.46197 14.7757 4.88743 15.5376 6.43928 15.8463C7.99113 16.155 9.59966 15.9965 11.0615 15.391C12.5233 14.7855 13.7727 13.7602 14.6518 12.4446C15.5308 11.129 16 9.58225 16 8C15.9977 5.87897 15.1541 3.84547 13.6543 2.34568C12.1545 0.845885 10.121 0.00229405 8 0V0ZM8.16667 3.33333C8.36445 3.33333 8.55779 3.39198 8.72224 3.50186C8.88669 3.61174 9.01486 3.76792 9.09055 3.95065C9.16624 4.13338 9.18604 4.33444 9.14746 4.52842C9.10887 4.7224 9.01363 4.90059 8.87378 5.04044C8.73392 5.18029 8.55574 5.27553 8.36176 5.31412C8.16778 5.3527 7.96671 5.3329 7.78399 5.25721C7.60126 5.18153 7.44508 5.05335 7.3352 4.8889C7.22532 4.72445 7.16667 4.53111 7.16667 4.33333C7.16667 4.06812 7.27203 3.81376 7.45956 3.62623C7.6471 3.43869 7.90145 3.33333 8.16667 3.33333ZM9.66667 12.3333H7C6.82319 12.3333 6.65362 12.2631 6.5286 12.1381C6.40358 12.013 6.33334 11.8435 6.33334 11.6667C6.33334 11.4899 6.40358 11.3203 6.5286 11.1953C6.65362 11.0702 6.82319 11 7 11H7.5C7.54421 11 7.5866 10.9824 7.61786 10.9512C7.64911 10.9199 7.66667 10.8775 7.66667 10.8333V7.83333C7.66667 7.78913 7.64911 7.74674 7.61786 7.71548C7.5866 7.68423 7.54421 7.66667 7.5 7.66667H7C6.82319 7.66667 6.65362 7.59643 6.5286 7.4714C6.40358 7.34638 6.33334 7.17681 6.33334 7C6.33334 6.82319 6.40358 6.65362 6.5286 6.5286C6.65362 6.40357 6.82319 6.33333 7 6.33333H7.66667C8.02029 6.33333 8.35943 6.47381 8.60948 6.72386C8.85953 6.97391 9 7.31304 9 7.66667V10.8333C9 10.8775 9.01756 10.9199 9.04882 10.9512C9.08008 10.9824 9.12247 11 9.16667 11H9.66667C9.84348 11 10.0131 11.0702 10.1381 11.1953C10.2631 11.3203 10.3333 11.4899 10.3333 11.6667C10.3333 11.8435 10.2631 12.013 10.1381 12.1381C10.0131 12.2631 9.84348 12.3333 9.66667 12.3333Z"
            fill="#627386"
          />
        );
        classes = styles.info;
        break;
      case ALERT_TYPE.SUCCESS:
        icon = (
          <path
            d="M8 0C6.41775 0 4.87104 0.469192 3.55544 1.34824C2.23985 2.22729 1.21447 3.47672 0.608967 4.93853C0.00346629 6.40034 -0.15496 8.00887 0.153721 9.56072C0.462403 11.1126 1.22433 12.538 2.34315 13.6569C3.46197 14.7757 4.88743 15.5376 6.43928 15.8463C7.99113 16.155 9.59966 15.9965 11.0615 15.391C12.5233 14.7855 13.7727 13.7602 14.6518 12.4446C15.5308 11.129 16 9.58225 16 8C15.9975 5.87903 15.1539 3.84563 13.6541 2.34587C12.1544 0.846118 10.121 0.00247015 8 0V0ZM12.618 5.46667L8.05467 11.6593C8.0008 11.7308 7.93322 11.7908 7.85589 11.8359C7.77856 11.881 7.69303 11.9102 7.60429 11.9219C7.51554 11.9336 7.42536 11.9274 7.339 11.9039C7.25265 11.8803 7.17186 11.8398 7.10134 11.7847L3.84267 9.17933C3.7743 9.12462 3.71737 9.05697 3.67514 8.98025C3.63291 8.90353 3.6062 8.81924 3.59654 8.73221C3.57704 8.55642 3.62816 8.38009 3.73867 8.242C3.84918 8.10391 4.01001 8.01538 4.1858 7.99587C4.36158 7.97637 4.53791 8.02749 4.676 8.138L7.39334 10.312L11.5447 4.678C11.5946 4.603 11.6593 4.53892 11.7348 4.48962C11.8102 4.44032 11.8948 4.40683 11.9836 4.39117C12.0724 4.37551 12.1634 4.37801 12.2511 4.39851C12.3389 4.41902 12.4216 4.4571 12.4942 4.51047C12.5668 4.56383 12.6279 4.63136 12.6737 4.70899C12.7194 4.78661 12.749 4.87271 12.7606 4.96209C12.7722 5.05146 12.7655 5.14226 12.741 5.22898C12.7165 5.31571 12.6746 5.39656 12.618 5.46667Z"
            fill="#48A463"
          />
        );
        classes = styles.success;
        break;
      case ALERT_TYPE.ERROR:
        icon = (
          <path
            d="M15.4127 13.3332L9.18134 1.4332C9.06841 1.21769 8.89866 1.0372 8.69049 0.91126C8.48231 0.785324 8.24364 0.71875 8.00034 0.71875C7.75704 0.71875 7.51837 0.785324 7.31019 0.91126C7.10202 1.0372 6.93227 1.21769 6.81934 1.4332L0.587339 13.3332C0.480887 13.5364 0.428675 13.7637 0.435755 13.993C0.442834 14.2223 0.508964 14.4459 0.62775 14.6422C0.746536 14.8385 0.913959 15.0008 1.11383 15.1134C1.3137 15.2261 1.53925 15.2852 1.76867 15.2852H14.2313C14.4608 15.2852 14.6863 15.2261 14.8862 15.1134C15.0861 15.0008 15.2535 14.8385 15.3723 14.6422C15.491 14.4459 15.5572 14.2223 15.5643 13.993C15.5713 13.7637 15.5191 13.5364 15.4127 13.3332ZM7.33334 5.6152C7.33334 5.43839 7.40358 5.26882 7.5286 5.1438C7.65363 5.01877 7.8232 4.94853 8.00001 4.94853C8.17682 4.94853 8.34639 5.01877 8.47141 5.1438C8.59644 5.26882 8.66667 5.43839 8.66667 5.6152V9.6152C8.66667 9.79201 8.59644 9.96158 8.47141 10.0866C8.34639 10.2116 8.17682 10.2819 8.00001 10.2819C7.8232 10.2819 7.65363 10.2116 7.5286 10.0866C7.40358 9.96158 7.33334 9.79201 7.33334 9.6152V5.6152ZM8.03334 13.2885H8.01467C7.75177 13.2877 7.49937 13.1852 7.31026 13.0026C7.12115 12.8199 7.00998 12.5713 7.00001 12.3085C6.9952 12.1779 7.01648 12.0476 7.06261 11.9252C7.10874 11.8029 7.17879 11.691 7.26866 11.596C7.35853 11.501 7.46643 11.4249 7.58605 11.3721C7.70567 11.3193 7.83461 11.2909 7.96534 11.2885H7.98401C8.24686 11.2888 8.49941 11.3908 8.68878 11.5731C8.87816 11.7554 8.98968 12.0039 9.00001 12.2665C9.00518 12.3975 8.98412 12.5282 8.93806 12.6509C8.89201 12.7736 8.82189 12.8858 8.73183 12.981C8.64177 13.0763 8.53358 13.1525 8.41363 13.2053C8.29368 13.2581 8.16438 13.2864 8.03334 13.2885Z"
            fill="#FF5B42"
          />
        );
        classes = styles.error;
        break;
      default:
        icon = "";
        classes = "";
        break;
    }
    return classes;
  };
  const getSize = () => {
    let classes;
    switch (size) {
      case ALERT_SIZE.SMALL:
        classes = styles.sizeSm;
        iconSize = 16;
        closeSize = 10;
        break;
      case ALERT_SIZE.MEDIUM:
        classes = styles.sizeMd;
        iconSize = 28;
        closeSize = 16;
        break;
      case ALERT_SIZE.LARGE:
        classes = styles.sizeLg;
        iconSize = 32;
        closeSize = 20;
        break;
      default:
        classes = styles.sizeSm;
        iconSize = 16;
        closeSize = 10;
        break;
    }
    return classes;
  };

  return (
    <div className={styles.container} data-testId="alert-container">
      <div className={`${getType()} ${getSize()}`}>
        <div className={styles.flexContainer} id={`alert-desc-${uId}`}>
          <svg
            width={`${iconSize}`}
            height={`${iconSize}`}
            viewBox="0 0 16 16"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            {icon}
          </svg>
          <div
            style={{
              padding:
                size == "lg" ? "0 52px" : size == "md" ? "0 28px" : "0 16px",
            }}
          >
            {title && (
              <h2
                className={showTitle ? "" : styles.srOnly}
                data-testid="alert-title"
              >
                {title}
              </h2>
            )}
            <div>{description}</div>
          </div>
        </div>
        <button
          className={styles.buttonWrap}
          data-testid="close-button"
          aria-describedby={`alert-desc-${uId}`}
          aria-label="close-button"
          onClick={() => {
            onClose();
          }}
        >
          <svg
            width={`${closeSize}`}
            height={`${closeSize}`}
            viewBox="0 0 10 10"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M5.95833 5.07487C5.94862 5.06519 5.94093 5.05369 5.93568 5.04104C5.93043 5.02838 5.92772 5.01482 5.92772 5.00112C5.92772 4.98741 5.93043 4.97385 5.93568 4.96119C5.94093 4.94854 5.94862 4.93704 5.95833 4.92737L9.81791 1.0682C9.9351 0.950841 10.0009 0.791735 10.0008 0.625882C10.0006 0.46003 9.93464 0.301017 9.81728 0.183824C9.69993 0.0666317 9.54082 0.00085951 9.37497 0.000976719C9.20912 0.00109393 9.0501 0.067091 8.93291 0.184449L5.07374 4.04195C5.06407 4.05165 5.05257 4.05935 5.03992 4.0646C5.02726 4.06985 5.01369 4.07255 4.99999 4.07255C4.98629 4.07255 4.97272 4.06985 4.96007 4.0646C4.94741 4.05935 4.93592 4.05165 4.92624 4.04195L1.06708 0.184449C1.00905 0.126394 0.940153 0.0803368 0.864325 0.048907C0.788498 0.0174773 0.707222 0.00129068 0.625139 0.00127134C0.459365 0.00123227 0.300365 0.0670484 0.183117 0.184241C0.0658691 0.301433 -2.19477e-05 0.460403 -6.10178e-05 0.626177C-0.000100088 0.791951 0.065716 0.950951 0.182909 1.0682L4.04166 4.92737C4.05136 4.93704 4.05906 4.94854 4.06431 4.96119C4.06956 4.97385 4.07226 4.98741 4.07226 5.00112C4.07226 5.01482 4.06956 5.02838 4.06431 5.04104C4.05906 5.05369 4.05136 5.06519 4.04166 5.07487L0.182909 8.93445C0.124881 8.9925 0.0788559 9.06142 0.0474619 9.13726C0.016068 9.21311 -8.03633e-05 9.29439 -6.10178e-05 9.37647C-2.19477e-05 9.54225 0.0658691 9.70121 0.183117 9.81841C0.241172 9.87644 0.310088 9.92246 0.385931 9.95385C0.461773 9.98525 0.543056 10.0014 0.625139 10.0014C0.790914 10.0013 0.949883 9.93545 1.06708 9.8182L4.92624 5.95862C4.93592 5.94892 4.94741 5.94122 4.96007 5.93597C4.97272 5.93072 4.98629 5.92801 4.99999 5.92801C5.01369 5.92801 5.02726 5.93072 5.03992 5.93597C5.05257 5.94122 5.06407 5.94892 5.07374 5.95862L8.93291 9.8182C9.0501 9.93545 9.20907 10.0013 9.37485 10.0014C9.54062 10.0014 9.69962 9.9356 9.81687 9.81841C9.93412 9.70121 10 9.54225 10 9.37647C10.0001 9.2107 9.93427 9.0517 9.81708 8.93445L5.95833 5.07487Z"
              fill="#627386"
            />
          </svg>
        </button>
      </div>
    </div>
  );
};

Alert.propTypes = {
  title: PropTypes.string,
  showTitle: PropTypes.bool,
  description: PropTypes.any,
  type: PropTypes.oneOf(["success", "info", "error"]),
  size: PropTypes.oneOf(["sm", "md", "lg"]),
  onClose: PropTypes.func,
};

Alert.defaultProps = {
  showTitle: false,
  type: "info",
  size: "md",
};
